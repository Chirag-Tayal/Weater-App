trigger:
  branches:
    include:
      - '*'

pool:
  name: my-pool

stages:
  - stage: Terraform
    displayName: 'Terraform Stage'
    jobs:
      - job: Terraform
        displayName: 'Terraform Job'
        steps:
          - script: |
              export ARM_CLIENT_ID="4afb82c8-b1b7-4acb-95b8-7e45627e4539"
              export ARM_CLIENT_SECRET="v9J8Q~LZnU5qTxHnLlFQeL0gRRU3GuIvxBzn9c_A"
              export ARM_TENANT_ID="625c37b3-4f97-45bb-b1a4-c080858632ab"
              export ARM_SUBSCRIPTION_ID="17bd46f2-ce41-4bdf-b47b-2347dc85340d"
              terraform init
            displayName: 'Terraform Init'

          - script: |
              terraform fmt -check
            displayName: 'Terraform Format Check'

          - script: |
              terraform validate
            displayName: 'Terraform Validate'

          - script: |
              terraform plan -out=tfplan
            displayName: 'Terraform Plan'

          - script: |
              terraform apply -auto-approve tfplan
            displayName: 'Terraform Apply'

  - stage: Build
    displayName: 'Build Stage'
    dependsOn: Terraform
    jobs:
      - job: Build
        displayName: 'Build Job'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '20.x'
            displayName: 'Install Node.js'

          - script: |
              npm install
              npm test -- --watchAll=false
              npm run build
            displayName: 'Install dependencies, run tests, and build'

          - task: SonarCloudPrepare@1
            inputs:
              SonarCloud: 'sonarcloud-conn'
              organization: 'chiragtayal018'
              scannerMode: 'CLI'
              configMode: 'manual'
              cliProjectKey: 'chiragtayal018_Weather_CICD'
              cliProjectName: 'Weather_CICD'
              cliSources: 'src'
            displayName: 'Prepare SonarCloud Analysis'

          - script: |
              npx sonar-scanner \\
                -Dsonar.projectKey=chiragtayal018_Weather_CICD \\
                -Dsonar.organization=chiragtayal018 \\
                -Dsonar.sources=src \\
                -Dsonar.host.url=https://sonarcloud.io \\
                -Dsonar.login=$(SONAR_TOKEN) \\
                -X
            displayName: 'Run SonarCloud Scanner with Debug'

  - stage: Deploy
    displayName: 'Deploy Stage'
    dependsOn: Build
    jobs:
      - job: Deploy
        displayName: 'Deploy to Azure App Service'
        steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: '${{ variables.azureServiceConnection }}'
              appType: 'webAppLinux'
              appName: '${{ variables.appServiceName }}'
              package: '$(Build.ArtifactStagingDirectory)/drop/*.zip'
            displayName: 'Deploy to Azure App Service'