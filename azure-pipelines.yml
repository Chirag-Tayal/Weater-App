trigger:
  branches:
    include:
      - '*'
pool:
  name: my-pool
stages:
  - stage: Build
    displayName: 'Build stage'
    jobs:
      - job: Build
        displayName: 'Build job'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '20.x'
            displayName: 'Install Node.js'

          - script: |
              npm install
              npm test -- --watchAll=false
              npm run build
            displayName: 'Install dependencies, run tests, and build'

          - task: SonarCloudPrepare@1
            inputs:
              SonarCloud: 'sonarcloud-conn' # Your SonarCloud service connection name
              organization: 'chiragtayal018' # Your SonarCloud organization
              scannerMode: 'CLI' # Use CLI scanner for JavaScript projects
              configMode: 'manual'
              cliProjectKey: 'chiragtayal018_Weather_CICD' # Your project key
              cliProjectName: 'Weather_CICD' # Your project name
              cliSources: 'src' # Your source directory
            displayName: 'Prepare SonarCloud Analysis'

          - script: |
              npx sonar-scanner \
                -Dsonar.projectKey=Weather_CICD \
                -Dsonar.organization=chiragtayal018 \
                -Dsonar.sources=src \
                -Dsonar.host.url=https://sonarcloud.io \
                -Dsonar.login=$(SONAR_TOKEN) \
                -X
            displayName: 'Run SonarCloud Scanner with Debug'

          - task: CopyFiles@2
            inputs:
              contents: 'build/**'
              targetFolder: '$(Build.ArtifactStagingDirectory)'
            displayName: 'Copy build files'
          
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: 'drop'
            displayName: 'Publish build artifacts'
          
  - stage: Deploy
    displayName: 'Deploy stage'
    dependsOn: Build
    jobs:
      - job: Deploy
        displayName: 'Deploy job'
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifactName: 'drop'
              targetPath: '$(Pipeline.Workspace)/drop'
            displayName: 'Download Build Artifacts'

          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'weather-conn'
              appName: 'react-pipelines'
              package: '$(Pipeline.Workspace)/drop/build'
              appType: 'webApp'
            displayName: 'Deploy to Azure Web App'
